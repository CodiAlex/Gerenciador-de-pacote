#!/bin/bash
# By Alexandre
 
[ ! -d ~/.Installed_softwares ] && mkdir ~/.Installed_softwares 
 
 [ -z $1 ] && echo --help for for more information && exit 
 
  case $1 in 
      install)
        [ -z $2 ] && echo Please name of package for install. && exit   
Nome_do_diretorio=$(tar -xvf $2 | tail -n 1 | awk -F"/" '{print $1}')
 
  grep $Nome_do_diretorio ~/.Installed &>/dev/null 
    
     if [ $? == 0 ] ; then 
     echo The package has already been installed, continue? [ y/n ] 
        read input 
    [ $input != y ] && exit 
     fi     
  
 
( ls $Nome_do_diretorio | grep Deps &>/dev/null && ger install-deps $2 )  
 
   Dirs=$(ls $Nome_do_diretorio)
 
Onde_esta_pacote_extraido=$(cd $Nome_do_diretorio && pwd && cd ..)
 
  echo Installing $2 
for diretorios in $Dirs ; do 
  cd $Onde_esta_pacote_extraido/$diretorios 
 
# Instalação do pacote. 
   sudo cp -rv * /$diretorios 2>/dev/null | tee -a ~/.Installed_softwares/$2.txt  
done 
 
 
echo $Nome_do_diretorio >> ~/.Installed 
 ;; 
  remove)
      [ -z $2 ] && echo Please specify package && exit 
 Achar_arquivo=$(find ~/.Installed_softwares -name $2.txt)
[ -z $Achar_arquivo ] && echo Not found package && exit 
  Remover_pacotes=$(cat $Achar_arquivo | awk -F"->" '{print $2}' | tr -d \') 
  sudo rm -v -r $Remover_pacotes 
   rm ~/.Installed_softwares/$2.txt 
  ;;
--help)
    echo install + name_of_package.tar.xz
    echo remove + name_of_package.tar.xz
    echo install-deps + name_of_package.tar.xz to install dependencies
    echo list-dependence + name_of_package.tar.xz for list dependencies
    echo install-net + name_of_package.tar.xz for install software via internet
    echo list-installed List installed packages  
 
    ;;
 install-deps)
  [ -z $2 ] && echo Please name of package.tar.xz && exit 
 
    Dir_extraido=$(tar -xvf $2 | tee extract.txt | tail -n 1 | awk -F"/" '{print $1}')
 
Local_do_dir=$(cd $Dir_extraido/Deps && pwd) 
 
 for seq_deps in $(ls $Local_do_dir) ; do 
    cd $Local_do_dir/$seq_deps 
    pwd 
   ger install *.tar.xz
done 
 ;;
 list-dependence)
     [ -z $2 ] && echo Please name of package.tar.xz && exit
     Var=$(tar -tvf $2 | awk -F"Deps/" '{print $2}' | sed 's/[0-9]\// /')
     count=0 
        # Dizer na ordem quais dependências vão ser instaladas 
         for seq_deps in $Var ; do
                  count=$(($count+1))
               echo Install Dependence $count $seq_deps
         done
     ;; 
       
    install-net)
 
Link_do_repositorio="https://github.com/CodiAlex/Repo-test.git"
Nome_do_diretorio=Repo-test
Nome_do_arquivo=Repo.txt
 
[ ! -d ~/.Repo-ger ] && mkdir ~/.Repo-ger
[ -d $Nome_do_diretorio ] && sudo rm -r $Nome_do_diretorio
 
git clone $Link_do_repositorio &&  mv $Nome_do_diretorio/$Nome_do_arquivo ~/.Repo-ger
 
 
# Número da linha referente ao programa
linha_do_programa=$(cat ~/.Repo-ger/$Nome_do_arquivo | grep -n $2 | awk -F":" '{print $1}')
 
grep $2 ~/.Repo-ger/$Nome_do_arquivo &>/dev/null
  [ $? == 1 ] && echo Package not found && exit
 
   while : ; do
 
linha_do_programa=$(($linha_do_programa+1))
 
# Quebrar loop se achar a linha ---
 
  saida_de_sed=$(sed -n "$linha_do_programa p" ~/.Repo-ger/$Nome_do_arquivo)
 
       if [ "$saida_de_sed" == --- ] ; then
           break
       fi
 
# Executar a saida de sed
         $(sed -n "$linha_do_programa p" ~/.Repo-ger/$Nome_do_arquivo)
 
 
 done
 
  rm ~/.Repo-ger/$Nome_do_arquivo
;;
      
   list-installed)  
       echo Installed packages: 
       ls ~/.Installed_softwares | sed s/.txt//
       ;;
esac 
